{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onsearchChange","event","setState","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAceA,EAZJ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACxB,OACC,sBAAKC,UAAU,oDAAf,UACC,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,cACvB,gCACC,6BAAKF,IACL,4BAAIC,WCaSK,EAnBA,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAClB,OACC,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACE,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KACbC,MAAOM,EAAOG,GAAGT,OAHfS,SCKIC,EAZG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACnB,OACC,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,gCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCADI,G,MAPA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAkBC,OAAO,SAAlE,SACEJ,EAAMK,aCgBKC,E,kDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAMC,GACvBC,KAAKJ,MAAM,CAACC,UAAS,M,oBAEtB,WACC,OAAGG,KAAKJ,MAAMC,SACN,0DACDG,KAAKX,MAAMK,a,GAdOO,aC4CZC,E,kDAvCd,aAAc,IAAD,8BACZ,gBAYDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAZxC,EAAKZ,MAAM,CACVjB,OAAO,GACP2B,YAAY,IAJD,E,qDAQb,WAAoB,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAAC1B,OAASkC,S,oBAKvC,WACC,MAA4Bb,KAAKJ,MAA3BjB,EAAN,EAAMA,OAAO2B,EAAb,EAAaA,YACPQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEtD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACD,cAAC,EAAD,CAAWS,aAAcgB,KAAKG,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAUxB,OAAQmC,WAPtB,6C,GAvBeM,IAAMnB,WCMToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAA0BC,SAASC,eAAe,SAKtEZ,M","file":"static/js/main.d8dc58b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({name, email,id})=>{\r\n\treturn(\r\n\t\t<div className='tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt = 'robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) =>{ \r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\trobots.map((user,i)=> {\r\n\t\t\treturn(\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t    email={robots[i].email}\r\n\t\t\t\t\t />\r\n\t\t\t )\r\n\t\t\t}\r\n)\r\n\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n  export default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t    <input \r\n\t\t    className='pa3 ba b--red bg-lightest-red' \r\n\t\t    type='search' \r\n\t\t    placeholder='search robots' \r\n\t\t    onChange={searchChange} \r\n\t\t    />\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll' ,border:'5px solid black',height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>);\r\n};\r\n\r\nexport default Scroll;","import React ,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.state({hasError:true});\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError)\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users=> this.setState({robots : users}))\r\n\t}\r\n\tonsearchChange = (event) => {\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\t}\r\n\trender(){\r\n\t\tconst{robots,searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading</h1>:\r\n\t\t\t(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<h1 className='f1'>Robofriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onsearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\r\n\t\t\r\n\t}\r\n\t\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode><App/></React.StrictMode>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}